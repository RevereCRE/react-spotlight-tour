(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[842],{3882:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var o=n(2122),i=n(9756),r=(n(7294),n(3905)),a=["components"],l={sidebar_position:2},s="Lazy Loading",p={unversionedId:"lazy-loading",id:"lazy-loading",isDocsHomePage:!1,title:"Lazy Loading",description:"React Spotlight Tour is designed with codesplitting in mind; if you don't need",source:"@site/docs/lazy-loading.md",sourceDirName:".",slug:"/lazy-loading",permalink:"/react-spotlight-tour/docs/lazy-loading",editUrl:"https://github.com/RevereCRE/react-spotlight-tour/edit/main/website/docs/lazy-loading.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/react-spotlight-tour/docs/intro"},next:{title:"API Reference",permalink:"/react-spotlight-tour/docs/api"}},d=[{value:"No Code Splitting",id:"no-code-splitting",children:[]},{value:"<code>React.lazy</code>",id:"reactlazy",children:[]},{value:"<code>next/dynamic</code>",id:"nextdynamic",children:[]}],c={toc:d};function u(t){var e=t.components,n=(0,i.Z)(t,a);return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lazy-loading"},"Lazy Loading"),(0,r.kt)("p",null,"React Spotlight Tour is designed with codesplitting in mind; if you don't need\nto load the tour it won't be loaded. Because there is no one standard way of\ncode splitting the ",(0,r.kt)("inlineCode",{parentName:"p"},"SpotlightTour")," component can't assume the environment it is\nin or how to dynamically load the ",(0,r.kt)("inlineCode",{parentName:"p"},"Spotlight")," component. Allowing API consumers\nto specify the (possibly) lazy-loaded component via the ",(0,r.kt)("inlineCode",{parentName:"p"},"Spotlight")," prop solves\nthis issue."),(0,r.kt)("h2",{id:"no-code-splitting"},"No Code Splitting"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{2,10}","{2,10}":!0},"import { SpotlightTour } from 'react-spotlight-tour';\nimport Spotlight from 'react-spotlight-tour/spotlight';\n\nfunction Feed() {\n  const [isOpen, setOpen] = useState(true);\n  return (\n    <SpotlightTour\n      open={isOpen}\n      onClose={() => setOpen(false)}\n      Spotlight={Spotlight}\n    >\n      <StoryFeedItem\n        title=\"How-to: Great Product Tours\"\n        text=\"Use React Spotlight Tour!\"\n      />\n    </SpotlightTour>\n  );\n}\n")),(0,r.kt)("h2",{id:"reactlazy"},(0,r.kt)("inlineCode",{parentName:"h2"},"React.lazy")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{3,11}","{3,11}":!0},"import { SpotlightTour } from 'react-spotlight-tour';\n\nconst Spotlight = React.lazy(() => import('react-spotlight-tour/spotlight'));\n\nfunction Feed() {\n  const [isOpen, setOpen] = useState(true);\n  return (\n    <SpotlightTour\n      open={isOpen}\n      onClose={() => setOpen(false)}\n      Spotlight={Spotlight}\n    >\n      <StoryFeedItem\n        title=\"How-to: Great Product Tours\"\n        text=\"Use React Spotlight Tour!\"\n      />\n    </SpotlightTour>\n  );\n}\n")),(0,r.kt)("h2",{id:"nextdynamic"},(0,r.kt)("inlineCode",{parentName:"h2"},"next/dynamic")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{3-5,13}","{3-5,13}":!0},"import { SpotlightTour } from 'react-spotlight-tour';\n\nconst Spotlight = dynamic(() => import('react-spotlight-tour/spotlight'), {\n  ssr: false,\n});\n\nfunction Feed() {\n  const [isOpen, setOpen] = useState(true);\n  return (\n    <SpotlightTour\n      open={isOpen}\n      onClose={() => setOpen(false)}\n      Spotlight={Spotlight}\n    >\n      <StoryFeedItem\n        title=\"How-to: Great Product Tours\"\n        text=\"Use React Spotlight Tour!\"\n      />\n    </SpotlightTour>\n  );\n}\n")))}u.isMDXComponent=!0}}]);